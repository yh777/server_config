user   nginx;
worker_processes  2;
worker_cpu_affinity 01 10; # for 2xcpu
#worker_cpu_affinity 0001 0010 0100 1000; # for 4xcpu
#worker_cpu_affinity 00000001 00000010 00000100 00001000 00010000 00100000 01000000 10000000; # for 8xcpu

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 40960;
events {
    use epoll;
    multi_accept on;
    worker_connections 40960;
}

http {
    charset       utf-8;
    include       mime.types;
    default_type  application/octet-stream;

    sendfile       on;
    tcp_nopush     on;
    tcp_nodelay    on;
    server_tokens  off;

    keepalive_timeout         60;
    client_header_timeout     60;
    client_body_timeout       60;
    reset_timedout_connection on;
    send_timeout              60;
    client_max_body_size      20m;

    gzip              on;
    gzip_static       on;
    gzip_vary         on;
    gzip_http_version 1.0;
    gzip_proxied      any;
    gzip_disable      "MSIE [1-6]\.";
    gzip_comp_level   5;
    gzip_min_length   1k;
    gzip_buffers      4 8k;
    gzip_types        image/svg+xml;
    gzip_types        text/plain;
    gzip_types        text/css;
    gzip_types        text/csv;
    gzip_types        text/xml;
    gzip_types        text/javascript
    gzip_types        application/json;
    gzip_types        application/ecmascript;
    gzip_types        application/javascript;
    gzip_types        application/x-javascript;
    gzip_types        application/xml;
    gzip_types        application/xml+rss;
    gzip_types        application/pdf;
    gzip_types        application/postscript;

    # cache informations about file descriptors, frequently accessed files
    # can boost performance, but you need to test those values
    open_file_cache max=100000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # proxy optimize config.
    proxy_buffer_size 32k;
    proxy_buffers 4 64k;
    proxy_busy_buffers_size 128k;
    
    # fix 400 error.
    client_header_buffer_size 16k;
    large_client_header_buffers 4 64k;

    server {
        listen       8090;
        server_name  fdfs-storage-server;

        location / {
            access_log     off;
            log_not_found  off;
            return         403;
        }

        location /g1/M00 {
            access_log     off;
            log_not_found  off;
            ngx_fastdfs_module;
            root /data/fdfs/diks0/data;
        }

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
